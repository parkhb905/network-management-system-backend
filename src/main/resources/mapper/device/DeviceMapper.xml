<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.network.nms.mapper.device.DeviceMapper">

    <select id="findDevices" resultType="com.network.nms.dto.device.DeviceResponse">
        SELECT
            *
        FROM
        (
            SELECT
                #{totalElements} - ROW_NUMBER() OVER (ORDER BY dv.created_at DESC) + 1 AS rownum
                , dv.device_id AS deviceId
                , dv.device_name AS deviceName
                , dv_cd.code_name AS deviceTypeName
                , vd_cd.code_name AS vendorName
                , usr.username AS createdByName
                , dv.created_at AS createdAt
            FROM
                device dv
            INNER JOIN
                code dv_cd
            ON
                dv.device_type_id = dv_cd.code_id
            AND
                dv_cd.deleted = FALSE
            INNER JOIN
                code vd_cd
            ON
                dv.vendor_id = vd_cd.code_id
            AND
                vd_cd.deleted = FALSE
            INNER JOIN
                `user` usr
            ON
                dv.created_by = usr.id
            AND
                usr.deleted = FALSE
            WHERE
                dv.deleted = FALSE
            ORDER BY
                dv.created_at DESC
            LIMIT
                #{size}
            OFFSET
                #{offset}
        ) pagingTbl
        ORDER BY
            pagingTbl.rownum DESC;
    </select>

    <select id="countDevices" resultType="long">
        SELECT
            COUNT(dv.device_id)
        FROM
            DEVICE dv
        INNER JOIN
            code dv_cd
        ON
            dv.device_type_id = dv_cd.code_id
        AND
            dv_cd.deleted = FALSE
        INNER JOIN
            code vd_cd
        ON
            dv.vendor_id = vd_cd.code_id
        AND
            vd_cd.deleted = FALSE
        INNER JOIN
            `user` usr
        ON
            dv.created_by = usr.id
        AND
            usr.deleted = FALSE
        WHERE
            dv.deleted = FALSE
    </select>

    <select id="findDevice" resultType="com.network.nms.dto.device.DeviceResponse">
        SELECT
            dv.device_id AS deviceId
            , dv.device_name AS deviceName
            , dv_cd.code_id AS deviceTypeId
            , dv_cd.code_name AS deviceTypeName
            , vd_cd.code_id AS vendorId
            , vd_cd.code_name AS vendorName
            , usr.username AS createdByName
            , dv.created_at AS createdAt
        FROM
            device dv
        INNER JOIN
            code dv_cd
        ON
            dv.device_type_id = dv_cd.code_id
        AND
            dv_cd.deleted = FALSE
        INNER JOIN
            code vd_cd
        ON
            dv.vendor_id = vd_cd.code_id
        AND
            vd_cd.deleted = FALSE
        INNER JOIN
            `user` usr
        ON
            dv.created_by = usr.id
        AND
            usr.deleted = FALSE
        WHERE
            dv.deleted = FALSE
        AND
            dv.device_id = #{deviceId}
    </select>

    <insert id="insertDevice" parameterType="com.network.nms.domain.device.Device">
        INSERT INTO device (
            device_name
            , device_type_id
            , vendor_id
            , created_by
            , created_at
        ) VALUES (
            #{deviceName}
            , #{deviceTypeId}
            , #{vendorId}
            , #{createdBy}
            , NOW()
        )
    </insert>

    <update id="updateDevice" parameterType="com.network.nms.domain.device.Device">
        UPDATE
            device
        SET
            device_name = #{deviceName}
            , device_type_id = #{deviceTypeId}
            , vendor_id = #{vendorId}
            , updated_by = #{updatedBy}
            , updated_at = NOW()
        WHERE
            device_id = #{deviceId}
    </update>

    <delete id="deleteDevices">
        DELETE FROM
            device
        WHERE
            device_id IN
            <foreach item="deviceId" collection="selectDeviceIds" open="(" separator="," close=")">
                #{deviceId}
            </foreach>
    </delete>

</mapper>